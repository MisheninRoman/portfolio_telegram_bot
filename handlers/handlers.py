from aiogram import types, F, Router
from aiogram.filters import Command

router = Router()

### –ü–û–õ–£–ß–ï–ù–ò–ï ID –§–ê–ô–õ–ê ###
# @router.message()
# async def file_handler(message: types.Message) -> None:
#    if message.document:
#        print(message.document.file_id)
#    elif message.photo:
#        print(message.photo[-1].file_id)


@router.message(F.text.startswith("/start"))
async def start_cmd(message: types.Message) -> None:
    global full_name
    full_name = message.from_user.full_name
    kb = [
        [types.InlineKeyboardButton(text="–û–±–æ –º–Ω–µ", callback_data="about_me")],
        [
            types.InlineKeyboardButton(text="–ú–æ–∏ —Ä–∞–ë–æ—Ç—ãü§ñ", callback_data="portfolio"),
            types.InlineKeyboardButton(text="–ú–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µüìñ", callback_data="study"),
        ],
        [
            types.InlineKeyboardButton(
                text="–ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µüìù", url="https://t.me/misheninrb"
            )
        ],
        [
            types.InlineKeyboardButton(
                text="GitHub", url="https://github.com/MisheninRoman"
            )
        ],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await message.answer(
        f"üôã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {full_name}!\n"
        "–î–∞–Ω–Ω—ã–π –±–æ—Ç = –º–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æü§ñ\n"
        "–î–ª—è –∏–∑—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n"
        "–≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=keyboard,
    )


@router.callback_query(F.data == "menu")
async def menu_cmd(callback: types.CallbackQuery):
    kb = [
        [types.InlineKeyboardButton(text="–û–±–æ –º–Ω–µ", callback_data="about_me")],
        [
            types.InlineKeyboardButton(text="–ú–æ–∏ —Ä–∞–ë–æ—Ç—ãü§ñ", callback_data="portfolio"),
            types.InlineKeyboardButton(text="–ú–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µüìñ", callback_data="study"),
        ],
        [
            types.InlineKeyboardButton(
                text="–ù–∞–ø–∏—Å–∞—Ç—å –º–Ω–µüìù", url="https://t.me/misheninrb"
            )
        ],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await callback.message.edit_text(
        f"üôã–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {full_name}!\n"
        "–î–∞–Ω–Ω—ã–π –±–æ—Ç = –º–æ–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æü§ñ\n"
        "–î–ª—è –∏–∑—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:\n"
        "–≤–æ—Å–ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=keyboard,
    )


@router.callback_query(F.data == "about_me")
async def about_me_cb(callback: types.CallbackQuery):
    kb = [[types.InlineKeyboardButton(text="‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="menu")]]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await callback.message.edit_text(
        "–ò–¢-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç.\n"
        "–†–∞–±–æ—Ç–∞—é –≤ –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–µ –ò–¢ –≥. –ú–æ—Å–∫–≤—ã.\n"
        "–ó–∞–Ω–∏–º–∞—é—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π, —Å–æ–∑–¥–∞–Ω–∏–µ–º Telegram-–±–æ—Ç–æ–≤ –∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö.\n"
        "–†–∞–±–æ—Ç–∞—é –±—ã—Å—Ç—Ä–æ, –ø–æ–Ω—è—Ç–Ω–æ –∏ –ø–æ –¥–µ–ª—É.",
        reply_markup=keyboard,
    )


@router.callback_query(F.data == "portfolio")
async def portfolio_cmd(callback: types.callback_query):
    kb = [[types.InlineKeyboardButton(text="‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="menu")]]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await callback.message.edit_text(
        "–í —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö —Ä–∞–±–æ—Ç –≤—Ö–æ–¥–∏—Ç:\n"
        "@MisheninRB_bot - —Ç–µ–∫—É—â–∏–π –±–æ—Ç.\n"
        "@collect_quest_bot - –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–æ–ª—å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –¥–ª—è HR-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.\n–ò—Å–ø–æ–ª—å–∑—É–µ—Ç –º—É–ª—å—Ç–∏-–∞–¥–º–∏–Ω–Ω–æ—Å—Ç—å –∏ FSM.\n"
        "–°–æ–±–∏—Ä–∞–µ—Ç –∞–Ω–∫–µ—Ç—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∏—Ö –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª (–∞—Ä—Ö–∏–≤), "
        "–∏ —Ç–∞–∫–∂–µ –¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è.\n"
        "@bot_for_service_recording - MVP –Ω–∞–∑–≤–∞–Ω–∏–µ - –±–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n–î–∞–Ω–Ω—ã–π –±–æ—Ç —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∫ –º–∞—Å—Ç–µ—Ä—É, –±—É–¥—å —Ç–æ –º–∞—Å—Ç–µ—Ä –ø–æ –º–∞–Ω–∏–∫—é—Ä—É –∏–ª–∏ —Ç–∞—Ç—É.\n"
        "–í –æ–±—â–µ–º –∏ —Ü–µ–ª–æ–º, —ç—Ç–æ—Ç –±–æ—Ç –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è –ª—é–±–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –∫–∞–∫–∏–µ-–ª–∏–±–æ —É—Å–ª—É–≥–∏",
        reply_markup=keyboard,
    )


@router.callback_query(F.data == "study")
async def study_cmd(callback: types.callback_query):
    kb = [
        [types.InlineKeyboardButton(text="‚¨ÖÔ∏è–í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="menu")],
        [
            types.InlineKeyboardButton(
                text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã", callback_data="—Åert"
            )
        ],
    ]
    keyboard = types.InlineKeyboardMarkup(inline_keyboard=kb)
    await callback.message.edit_text(
        "–ó–∞–∫–æ–Ω—á–∏–ª –∫—É—Ä—Å—ã:\n"
        ' - "–ü–æ–∫–æ–ª–µ–Ω–∏–µ Python": –∫—É—Ä—Å –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. \n'
        ' - "–ü–æ–∫–æ–ª–µ–Ω–∏–µ Python": –∫—É—Ä—Å –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö. \n'
        ' - "Web-dev –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö": HTML –∏ CSS. \n'
        ' - "–û—Å–Ω–æ–≤—ã Python": —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞. \n'
        ' - "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–æ–≤ —Å –Ω—É–ª—è". ',
        reply_markup=keyboard,
    )


@router.callback_query(F.data == "—Åert")
async def sert_cmd(callback: types.callback_query):
    cert_id_1 = "AgACAgIAAxkBAANWaEFNxabQzpwbgEYMK9iO3CWeYpsAArL9MRumBRFKWOLcExOegSsBAAMCAAN5AAM2BA"
    cert_id_2 = "AgACAgIAAxkBAANXaEFOCGIoi6v8QYGbvZDGagMVc9UAArT9MRumBRFKdXVjCuVvroEBAAMCAAN5AAM2BA"
    cert_id_3 = "AgACAgIAAxkBAAOGaFvMOJD8pHBCQGtER9Qsjss5hH4AAmXxMRuhheBK5psTdBIXLA8BAAMCAAN4AAM2BA"
    await callback.message.answer_photo(cert_id_1)
    await callback.message.answer_photo(cert_id_2)
    await callback.message.answer_photo(cert_id_3)
